Grammar

    0 $accept: S $end

    1 S: S E '\n'
    2  | ε

    3 E: E '+' T
    4  | E '-' T
    5  | T

    6 T: T '*' F
    7  | T '/' F
    8  | F

    9 F: T_NUM
   10  | '(' E ')'


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 1
    '(' (40) 10
    ')' (41) 10
    '*' (42) 6
    '+' (43) 3
    '-' (45) 4
    '/' (47) 7
    error (256)
    T_NUM (258) 9


Nonterminals, with rules where they appear

    $accept (11)
        on left: 0
    S (12)
        on left: 1 2
        on right: 0 1
    E (13)
        on left: 3 4 5
        on right: 1 3 4 10
    T (14)
        on left: 6 7 8
        on right: 3 4 5 6 7
    F (15)
        on left: 9 10
        on right: 6 7 8


State 0

    0 $accept: • S $end

    $default  reduce using rule 2 (S)

    S  go to state 1


State 1

    0 $accept: S • $end
    1 S: S • E '\n'

    $end   shift, and go to state 2
    T_NUM  shift, and go to state 3
    '('    shift, and go to state 4

    E  go to state 5
    T  go to state 6
    F  go to state 7


State 2

    0 $accept: S $end •

    $default  accept


State 3

    9 F: T_NUM •

    $default  reduce using rule 9 (F)


State 4

   10 F: '(' • E ')'

    T_NUM  shift, and go to state 3
    '('    shift, and go to state 4

    E  go to state 8
    T  go to state 6
    F  go to state 7


State 5

    1 S: S E • '\n'
    3 E: E • '+' T
    4  | E • '-' T

    '\n'  shift, and go to state 9
    '+'   shift, and go to state 10
    '-'   shift, and go to state 11


State 6

    5 E: T •
    6 T: T • '*' F
    7  | T • '/' F

    '*'  shift, and go to state 12
    '/'  shift, and go to state 13

    $default  reduce using rule 5 (E)


State 7

    8 T: F •

    $default  reduce using rule 8 (T)


State 8

    3 E: E • '+' T
    4  | E • '-' T
   10 F: '(' E • ')'

    '+'  shift, and go to state 10
    '-'  shift, and go to state 11
    ')'  shift, and go to state 14


State 9

    1 S: S E '\n' •

    $default  reduce using rule 1 (S)


State 10

    3 E: E '+' • T

    T_NUM  shift, and go to state 3
    '('    shift, and go to state 4

    T  go to state 15
    F  go to state 7


State 11

    4 E: E '-' • T

    T_NUM  shift, and go to state 3
    '('    shift, and go to state 4

    T  go to state 16
    F  go to state 7


State 12

    6 T: T '*' • F

    T_NUM  shift, and go to state 3
    '('    shift, and go to state 4

    F  go to state 17


State 13

    7 T: T '/' • F

    T_NUM  shift, and go to state 3
    '('    shift, and go to state 4

    F  go to state 18


State 14

   10 F: '(' E ')' •

    $default  reduce using rule 10 (F)


State 15

    3 E: E '+' T •
    6 T: T • '*' F
    7  | T • '/' F

    '*'  shift, and go to state 12
    '/'  shift, and go to state 13

    $default  reduce using rule 3 (E)


State 16

    4 E: E '-' T •
    6 T: T • '*' F
    7  | T • '/' F

    '*'  shift, and go to state 12
    '/'  shift, and go to state 13

    $default  reduce using rule 4 (E)


State 17

    6 T: T '*' F •

    $default  reduce using rule 6 (T)


State 18

    7 T: T '/' F •

    $default  reduce using rule 7 (T)
